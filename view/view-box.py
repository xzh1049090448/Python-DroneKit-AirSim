import numpy as np
from matplotlib import pyplot as plt
from scipy.interpolate import make_interp_spline
"""
蓝的是ardupilot 实线
橙的是simpleflight 虚线
"""
x1 = np.array(
    [-35.3632154, -35.3632159, -35.3632198, -35.3632255, -35.3632313, -35.363236, -35.36324, -35.3632443, -35.3632492,
     -35.3632544, -35.3632592, -35.3632624, -35.3632667, -35.3632717, -35.3632759, -35.3632796, -35.3632837,
     -35.3632882, -35.3632929, -35.3632974, -35.3633004, -35.3632982, -35.3632925, -35.3632867, -35.3632824,
     -35.3632786, -35.3632746, -35.3632701, -35.3632652, -35.3632607, -35.3632569, -35.3632526, -35.3632476,
     -35.3632436, -35.3632398, -35.3632359, -35.3632316, -35.3632154]
    )
y1 = np.array([149.1652347, 149.1652358, 149.1652396, 149.1652463, 149.1652528, 149.1652576, 149.1652622, 149.1652677,
               149.1652737, 149.1652795, 149.1652847, 149.1652846, 149.1652783, 149.1652703, 149.1652637, 149.1652584,
               149.1652531, 149.1652474, 149.165241, 149.1652345, 149.1652287, 149.1652231, 149.1652163, 149.1652103,
               149.1652052, 149.1651999, 149.1651938, 149.1651875, 149.1651811, 149.1651753, 149.1651746, 149.1651807,
               149.165189, 149.165196, 149.1652014, 149.1652066, 149.1652124, 149.1652347]
              )
z1 = np.array([53.116795, 54.1172189, 55.1180168, 56.1186548, 57.1188734, 58.119876, 59.1200796, 60.1204242, 61.1212805,
               62.1218144, 63.1222655, 64.1232077, 65.1239867, 66.1246052, 67.1248184, 68.1256068, 69.1266962,
               70.1276728, 71.1282195, 72.1285932, 73.1291629, 74.1298693, 75.1303472, 76.1306034, 77.1316381,
               78.1319401, 79.1323577, 80.1328195, 81.1338024, 82.1346985, 83.1349073, 84.135224, 85.1360853, 86.136531,
               87.1370842, 88.1374947, 89.1380041, 90.1381654]
              )
x2 = np.array([-35.363216049796534, -35.36321639227783, -35.36321885278497, -35.36322400583936, -35.363230272687304,
               -35.36323665419354, -35.363242658724175, -35.36324834334145, -35.36325406208866, -35.36325985364978,
               -35.36326383417373, -35.36326776386478, -35.363271550436586, -35.36327539131451, -35.3632797162234,
               -35.36328492096852, -35.3632909933512, -35.363297466384346, -35.363304039009435, -35.36330825609315,
               -35.3633076564869, -35.363303445916635, -35.36329737166366, -35.363290683701955, -35.363283960200626,
               -35.363277635636564, -35.36327145377407, -35.36326517523887, -35.363259879588696, -35.363257247413244,
               -35.36325376291332, -35.36324977553257, -35.36324531699659, -35.36324018355725, -35.36323435632853,
               -35.363228146890435, -35.36322191321733, -35.363216049796534]
              )
y2 = np.array([149.16522963561084, 149.16523149186338, 149.1652352485007, 149.16523993178583, 149.16524542053463,
               149.16525197105065, 149.1652595492425, 149.16526768769847, 149.16527603825492, 149.16528409733775,
               149.16528820808503, 149.16528597604054, 149.16527984475505, 149.16527180780562, 149.16526320032435,
               149.16525496337337, 149.1652473091697, 149.16524003781564, 149.16523263868373, 149.16522770742648,
               149.16522381741504, 149.16521920274639, 149.1652142648628, 149.16520880034298, 149.16520232914675,
               149.1651950849836, 149.1651873433477, 149.16517949938557, 149.1651731250748, 149.16517204359698,
               149.16517593833441, 149.1651826119728, 149.16519052075728, 149.1651986942539, 149.16520667776769,
               149.1652144379508, 149.1652221344032, 149.16522963561084]
              )

def map(data, MIN, MAX):
    """
    归一化映射到任意区间
    :param data: 数据
    :param MIN: 目标数据最小值
    :param MAX: 目标数据最小值
    :return:
    """
    d_min = np.max(data)  # 当前数据最大值
    d_max = np.min(data)  # 当前数据最小值
    return MIN + (MAX - MIN) / (d_max - d_min) * (data - d_min)


x1 = map(x1, 0, 13)
x2 = map(x2, 0, 13)
# print(x2)
y1 = map(y1, 0, 13)
y2 = map(y2, 0, 13)
z1 = z1 - 52.5
# 经度
z1_smooth = np.linspace(z1.min(), z1.max(), 300)
y1_smooth = make_interp_spline(z1, y1)(z1_smooth)
y2_smooth = make_interp_spline(z1, y2)(z1_smooth)

plt.plot(z1_smooth, y1_smooth, label='Real')
plt.plot(z1_smooth, y2_smooth, label='Simulate', linestyle="--")
plt.legend()
plt.xlabel("Time (seconds)")  # X轴标题及字号
plt.ylabel("Y")  # Y轴标题及字号
plt.show()

# 纬度
z1_smooth = np.linspace(z1.min(), z1.max(), 300)
x1_smooth = make_interp_spline(z1, x1)(z1_smooth)
x2_smooth = make_interp_spline(z1, x2)(z1_smooth)

plt.plot(z1_smooth, x1_smooth, label='Real')
plt.plot(z1_smooth, x2_smooth, label='Simulate', linestyle="--")
plt.legend()
plt.xlabel("Time (seconds)")  # X轴标题及字号
plt.ylabel("X")  # Y轴标题及字号
plt.show()

# 轨迹
# x1_smooth = np.linspace(x1.min(), x1.max(), 300)
# y1_smooth = make_interp_spline(x1, y1)(x1_smooth)
# x2_smooth = np.linspace(x2.min(), x2.max(), 300)
# y2_smooth = make_interp_spline(z1, y2)(x2_smooth)

plt.plot(x1, y1, label='Real')
plt.plot(x2, y2, label='Simulate', linestyle="--")
# plt.plot(x1_smooth, y1_smooth)
# plt.plot(x2_smooth, y2_smooth)
plt.legend()
plt.xlabel("X")  # X轴标题及字号
plt.ylabel("Y")  # Y轴标题及字号
plt.show()