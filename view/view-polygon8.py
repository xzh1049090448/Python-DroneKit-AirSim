import numpy as np
from matplotlib import pyplot as plt
from scipy.interpolate import make_interp_spline

"""
蓝的是ardupilot 实线
橙的是simpleflight 虚线
"""
x2 = np.array(
    [-35.36325090384036, -35.363249227773466, -35.36324460852704, -35.36323840313132, -35.36323295141026,
     -35.363230935748334, -35.36322726049679, -35.36322189062441, -35.36321624279923, -35.36321383299502,
     -35.36321294422579, -35.36321081324626, -35.363208076308915, -35.36320625398742, -35.36320646902637,
     -35.3632088267709, -35.36321233203647, -35.36321603709852, -35.363217614521936, -35.36322012547119,
     -35.36322549184098, -35.36323219144354, -35.36323630112215, -35.363237122599166, -35.363240775366776,
     -35.36324643952059, -35.36325220306144, -35.36325442509725, -35.36325564644797, -35.36325782218586,
     -35.36326040870211, -35.36326192006027, -35.363261390932095, -35.363258884798555, -35.36325531956509,
     -35.36325180218143, -35.36325053796599, -35.3632514079531, -35.36325215297181, -35.363252039014135,
     -35.36325171991164, -35.36325167112346, -35.36325177688844, -35.3632518280289, -35.36325180275871,
     -35.36325177553277, -35.363251777023606, -35.3632517879643, -35.363251790626805, -35.36325178721602]

)
y2 = np.array(
    [149.16524238068286, 149.16524104277124, 149.16523764062893, 149.16523314204144, 149.16522920406135,
     149.16522840404255, 149.1652310498579, 149.16523574575874, 149.1652408395516, 149.16524301931213,
     149.16524564862445, 149.16525200890223, 149.16526016922896, 149.1652655503246, 149.16526669101881,
     149.1652709722781, 149.1652777289143, 149.16528494454306, 149.16528799952687, 149.16528936707104,
     149.16529199522768, 149.16529520603964, 149.16529718342093, 149.16529662596014, 149.16529360625222,
     149.16528927449565, 149.1652849170229, 149.16528319404694, 149.165279804081, 149.16527307587154,
     149.16526494110002, 149.16526019001452, 149.1652591831096, 149.16525463151382, 149.1652476218496,
     149.1652406142997, 149.16523812897398, 149.16523988753264, 149.165241353651, 149.1652410826281, 149.1652404403675,
     149.16524037009572, 149.16524059451274, 149.16524068625682, 149.16524062553606, 149.16524057256115,
     149.1652405809989, 149.1652406039749, 149.16524060705206, 149.1652405991185]

)

z1 = np.array(
    [22.4883837, 23.4886829, 24.48893, 25.4897118, 26.4907089, 27.4910053, 28.4919027, 29.4924021, 30.4927168,
     31.4928328, 32.4936852, 33.4940316, 34.4946156, 35.4955172, 36.4957562, 37.4961611, 38.4966396, 39.4975725,
     40.497855, 41.4985275, 42.499059, 43.4997987, 44.5002991, 45.5012774, 46.5025298, 47.5032514, 48.5034941,
     49.5037227, 50.5041336, 51.5042954, 52.5051436, 53.5060985, 54.5070117, 55.507246, 56.5073945, 57.5084266,
     58.5093666, 59.5094406, 60.5101217, 61.5106154, 62.5112331, 63.5117601, 64.5125058, 65.5134793, 66.5135629,
     67.514475, 68.5148438, 69.515682, 70.5158763, 71.5163612]

)

x1 = np.array(
    [-35.363251, -35.3632507, -35.3632468, -35.3632415, -35.3632368, -35.3632325, -35.3632288, -35.3632235, -35.3632155,
     -35.3632092, -35.3632097, -35.3632116, -35.3632103, -35.363208, -35.3632067, -35.3632084, -35.3632125, -35.3632163,
     -35.3632172, -35.363217, -35.3632198, -35.3632257, -35.3632331, -35.3632373, -35.3632393, -35.3632435, -35.3632495,
     -35.3632544, -35.3632556, -35.3632555, -35.3632568, -35.3632583, -35.3632595, -35.3632586, -35.3632549,
     -35.3632513, -35.3632503, -35.3632512, -35.3632523, -35.3632527, -35.3632523, -35.3632518, -35.3632515,
     -35.3632515, -35.3632515, -35.3632516, -35.3632516, -35.3632516, -35.3632515, -35.3632514]

)
y1 = np.array(
    [149.1652352, 149.1652342, 149.1652308, 149.165226, 149.1652215, 149.1652202, 149.1652234, 149.1652279, 149.1652335,
     149.1652383, 149.1652395, 149.165243, 149.16525, 149.1652596, 149.1652685, 149.1652756, 149.1652814, 149.1652856,
     149.1652861, 149.1652856, 149.1652878, 149.1652942, 149.1652997, 149.1653011, 149.1652978, 149.1652929,
     149.1652885, 149.1652856, 149.1652844, 149.1652798, 149.1652718, 149.1652625, 149.165254, 149.165247, 149.1652409,
     149.1652364, 149.1652356, 149.1652365, 149.165237, 149.1652363, 149.1652355, 149.165235, 149.165235, 149.1652352,
     149.1652353, 149.1652353, 149.1652353, 149.1652352, 149.1652352, 149.1652352]

)


def map(data, MIN, MAX):
    """
    归一化映射到任意区间
    :param data: 数据
    :param MIN: 目标数据最小值
    :param MAX: 目标数据最小值
    :return:
    """
    d_min = np.max(data)  # 当前数据最大值
    d_max = np.min(data)  # 当前数据最小值
    return MIN + (MAX - MIN) / (d_max - d_min) * (data - d_min)


x1 = map(x1, 0, 13)
x2 = map(x2, 0, 13)
# print(x2)
y1 = map(y1, 0, 13)
y2 = map(y2, 0, 13)
z1 = z1 - 22
# 经度
z1_smooth = np.linspace(z1.min(), z1.max(), 300)
y1_smooth = make_interp_spline(z1, y1)(z1_smooth)
y2_smooth = make_interp_spline(z1, y2)(z1_smooth)

plt.plot(z1_smooth, y1_smooth, label='Real')
plt.plot(z1_smooth, y2_smooth, label='Simulate', linestyle="--")
plt.legend()
plt.xlabel("Time (seconds)")  # X轴标题及字号
plt.ylabel("Y")  # Y轴标题及字号
plt.show()

# 纬度
z1_smooth = np.linspace(z1.min(), z1.max(), 300)
x1_smooth = make_interp_spline(z1, x1)(z1_smooth)
x2_smooth = make_interp_spline(z1, x2)(z1_smooth)

plt.plot(z1_smooth, x1_smooth, label='Real')
plt.plot(z1_smooth, x2_smooth, label='Simulate', linestyle="--")
plt.legend()
plt.xlabel("Time (seconds)")  # X轴标题及字号
plt.ylabel("X")  # Y轴标题及字号
plt.show()

# 轨迹
# x1_smooth = np.linspace(x1.min(), x1.max(), 300)
# y1_smooth = make_interp_spline(x1, y1)(x1_smooth)
# x2_smooth = np.linspace(x2.min(), x2.max(), 300)
# y2_smooth = make_interp_spline(z1, y2)(x2_smooth)

plt.plot(x1, y1, label='Real')#marker设置标记形状 markersize设置标记大小
plt.plot(x2, y2, label='Simulate', linestyle="--")
plt.legend()
# plt.plot(x1_smooth, y1_smooth)
# plt.plot(x2_smooth, y2_smooth)
plt.xlabel("X")  # X轴标题及字号
plt.ylabel("Y")  # Y轴标题及字号

# eps_fig = plt.gcf()  # 'get current figure'
# eps_fig.savefig('foo.eps', format='eps', dpi=1000)
plt.show()
